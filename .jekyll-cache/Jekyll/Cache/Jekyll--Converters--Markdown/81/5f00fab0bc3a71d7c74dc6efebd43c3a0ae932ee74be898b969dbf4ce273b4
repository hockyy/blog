I"vj<p>Following a great <a href="http://rnovitsky.blogspot.nl/2010/04/using-hillshade-image-as-intensity.html">blog post</a> by Ran (Novitsky) Nof on an improved <a href="http://rnovitsky.blogspot.nl/2010/04/using-hillshade-image-as-intensity.html">matplotlib hillshading</a> method, I decided to implement this method as well. I do it slightly differently than Ran, mainly in the way I normalize the intensity of the illumination result.</p>

<h3 id="this-is-the-hillshading-code">This is the <em>hillshading</em> code:</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="nn">scipy.ndimage</span> <span class="kn">import</span> <span class="n">uniform_filter</span>

<span class="k">def</span> <span class="nf">calc_intensity</span><span class="p">(</span><span class="n">relief</span><span class="p">,</span> <span class="n">azimuth</span><span class="o">=</span><span class="mf">315.</span><span class="p">,</span> <span class="n">altitude</span><span class="o">=</span><span class="mf">45.</span><span class="p">,</span>
                   <span class="n">scale</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">smooth</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">normalize</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
    <span class="s">"""
    Calculate the illumination intensity of ``relief``.

    Can be used as to create a shaded relief map and GMT style draping
    of data.

    It is assumed that the grid origin is at the upper-left corner.
    If that is not the case, add 90 to ``azimuth``.

    This function produces similar results to the
    :meth:`~matplotlib.colors.LightSource.hillshade` method of
    matplotlib but gives extra control in terms of how the result is
    normalized.

    Parameters
    ----------
    relief : a 2d :class:`~numpy.ndarray`
        Topography or other data to calculate intensity from.

    azimuth : float
        Direction of light source, degrees from north.

    altitude : float
        Height of light source, degrees above the horizon.

    scale : float
        Scaling value of the data.

    smooth : float
        Number of cells to average before intensity calculation.

    normalize : bool or float
        By default the intensity is clipped to the [0,1] range. If set
        to ``True``, intensity is normalized to [0,1]. Otherwise, give a
        float value to normalize to [0,1] and multiply by the value
        before clipping to [0,1]. If ``normalize`` &gt; 1, illumination
        becomes brighter and if &lt; 1 illumination becomes darker.

    Returns
    -------
    intensity : :class:`~numpy.ndarray`
        a 2d array with illumination in the [0,1] range.
        Same size as ``relief``.
    """</span>

    <span class="n">relief</span> <span class="o">=</span> <span class="n">relief</span><span class="p">.</span><span class="n">copy</span><span class="p">()</span>

    <span class="k">if</span> <span class="n">scale</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">relief</span> <span class="o">=</span> <span class="n">relief</span> <span class="o">*</span> <span class="n">scale</span>
    <span class="k">if</span> <span class="n">smooth</span><span class="p">:</span>
        <span class="n">relief</span> <span class="o">=</span> <span class="n">uniform_filter</span><span class="p">(</span><span class="n">relief</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="n">smooth</span><span class="p">)</span>

    <span class="n">dzdy</span><span class="p">,</span> <span class="n">dzdx</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">gradient</span><span class="p">(</span><span class="n">relief</span><span class="p">)</span>

    <span class="n">slope</span> <span class="o">=</span> <span class="mf">0.5</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">-</span> <span class="n">np</span><span class="p">.</span><span class="n">arctan</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">dzdx</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">dzdy</span><span class="o">**</span><span class="mi">2</span><span class="p">))</span>

    <span class="n">aspect</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arctan2</span><span class="p">(</span><span class="n">dzdx</span><span class="p">,</span> <span class="n">dzdy</span><span class="p">)</span>

    <span class="n">altitude</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">radians</span><span class="p">(</span><span class="n">altitude</span><span class="p">)</span>
    <span class="n">azimuth</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">radians</span><span class="p">((</span><span class="n">azimuth</span> <span class="o">-</span> <span class="mi">90</span><span class="p">)</span> <span class="o">%</span> <span class="mi">360</span><span class="p">)</span>

    <span class="n">intensity</span> <span class="o">=</span> <span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">altitude</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">slope</span><span class="p">)</span> <span class="o">+</span>
                 <span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="n">altitude</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="n">slope</span><span class="p">)</span> <span class="o">*</span>
                 <span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="o">-</span><span class="n">azimuth</span> <span class="o">-</span> <span class="mf">0.5</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">-</span> <span class="n">aspect</span><span class="p">))</span>

    <span class="k">if</span> <span class="n">normalize</span><span class="p">:</span>
        <span class="n">intensity</span> <span class="o">=</span> <span class="p">(</span><span class="n">normalize</span> <span class="o">*</span>
                     <span class="p">(</span><span class="n">intensity</span> <span class="o">-</span> <span class="n">intensity</span><span class="p">.</span><span class="nb">min</span><span class="p">())</span> <span class="o">/</span> <span class="n">intensity</span><span class="p">.</span><span class="n">ptp</span><span class="p">())</span>

    <span class="k">return</span> <span class="n">intensity</span><span class="p">.</span><span class="n">clip</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="generate-some-sample-data">Generate some sample data:</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">sample_data</span><span class="p">(</span><span class="n">rmin</span><span class="o">=-</span><span class="mi">30</span><span class="p">,</span> <span class="n">rmax</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span> <span class="n">n</span><span class="o">=</span><span class="mi">100</span><span class="p">):</span>
    <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">meshgrid</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="n">rmin</span><span class="p">,</span> <span class="n">rmax</span><span class="p">,</span> <span class="n">n</span><span class="p">),</span>
                       <span class="n">np</span><span class="p">.</span><span class="n">linspace</span><span class="p">(</span><span class="n">rmin</span><span class="p">,</span> <span class="n">rmax</span><span class="p">,</span> <span class="n">n</span><span class="p">))</span>

    <span class="n">r</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">x</span><span class="o">**</span><span class="mi">2</span> <span class="o">+</span> <span class="n">y</span><span class="o">**</span><span class="mi">2</span><span class="p">)</span>
    <span class="n">data</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">*</span> <span class="n">r</span> <span class="o">/</span> <span class="mi">8</span><span class="p">)</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="n">r</span> <span class="o">/</span> <span class="mi">10</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">*</span> <span class="n">y</span>
    <span class="k">return</span> <span class="n">data</span> <span class="o">+</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">rand</span><span class="p">(</span><span class="o">*</span><span class="n">data</span><span class="p">.</span><span class="n">shape</span><span class="p">)</span> <span class="o">-</span> <span class="mf">0.5</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="plot-relief-and-illumination">Plot relief and illumination</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="rouge-code"><pre><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">data</span> <span class="o">=</span> <span class="n">sample_data</span><span class="p">()</span>

<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">ncols</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">3</span><span class="p">))</span>

<span class="n">im</span> <span class="o">=</span> <span class="n">ax</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">imshow</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span><span class="s">'bilinear'</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'Greys_r'</span><span class="p">)</span>
<span class="n">ax</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">set_title</span><span class="p">(</span><span class="s">'relief'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">colorbar</span><span class="p">(</span><span class="n">im</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>

<span class="c1"># calculate illumination intensity using default values
</span><span class="n">illumination</span> <span class="o">=</span> <span class="n">calc_intensity</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="n">im</span> <span class="o">=</span> <span class="n">ax</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">imshow</span><span class="p">(</span><span class="n">illumination</span><span class="p">,</span>
                  <span class="n">interpolation</span><span class="o">=</span><span class="s">'bilinear'</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'Greys_r'</span><span class="p">,</span>
                  <span class="n">vmin</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">ax</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">set_title</span><span class="p">(</span><span class="s">'illumination'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">colorbar</span><span class="p">(</span><span class="n">im</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>

<span class="k">for</span> <span class="n">ax_</span> <span class="ow">in</span> <span class="n">ax</span><span class="p">:</span>
    <span class="n">ax_</span><span class="p">.</span><span class="n">set_xticks</span><span class="p">([])</span>
    <span class="n">ax_</span><span class="p">.</span><span class="n">set_yticks</span><span class="p">([])</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/assets/images/hillshade_images/output_7_0.png" alt="png" /></p>

<h3 id="different-scale-and-smooth-parameters">Different <code class="language-plaintext highlighter-rouge">scale</code> and <code class="language-plaintext highlighter-rouge">smooth</code> parameters</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
</pre></td><td class="rouge-code"><pre><span class="kn">from</span> <span class="nn">itertools</span> <span class="kn">import</span> <span class="n">product</span>

<span class="n">scale</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">smooth</span> <span class="o">=</span> <span class="p">(</span><span class="bp">None</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>

<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">smooth</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">scale</span><span class="p">),</span> 
                       <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nb">len</span><span class="p">(</span><span class="n">scale</span><span class="p">),</span> <span class="mi">2</span> <span class="o">*</span> <span class="nb">len</span><span class="p">(</span><span class="n">smooth</span><span class="p">)))</span>
<span class="n">fig</span><span class="p">.</span><span class="n">subplots_adjust</span><span class="p">(</span><span class="n">left</span><span class="o">=</span><span class="mf">0.1</span><span class="p">,</span> <span class="n">bottom</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">right</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">top</span><span class="o">=</span><span class="mf">0.9</span><span class="p">,</span>
                    <span class="n">wspace</span><span class="o">=</span><span class="mf">0.05</span><span class="p">,</span> <span class="n">hspace</span><span class="o">=</span><span class="mf">0.05</span><span class="p">)</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="p">((</span><span class="n">smooth_</span><span class="p">,</span> <span class="n">scale_</span><span class="p">),</span> <span class="n">ax_</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">product</span><span class="p">(</span><span class="n">smooth</span><span class="p">,</span> <span class="n">scale</span><span class="p">),</span>
                                                 <span class="n">ax</span><span class="p">.</span><span class="n">flat</span><span class="p">)):</span>
    <span class="c1"># calculate illumination intensity with scale and smooth params
</span>    <span class="n">illumination</span> <span class="o">=</span> <span class="n">calc_intensity</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">scale</span><span class="o">=</span><span class="n">scale_</span><span class="p">,</span> <span class="n">smooth</span><span class="o">=</span><span class="n">smooth_</span><span class="p">)</span>
    <span class="n">ax_</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">illumination</span><span class="p">,</span>
               <span class="n">interpolation</span><span class="o">=</span><span class="s">'bilinear'</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'Greys_r'</span><span class="p">,</span>
               <span class="n">vmin</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">ax_</span><span class="p">.</span><span class="n">set_xticks</span><span class="p">([])</span>
    <span class="n">ax_</span><span class="p">.</span><span class="n">set_yticks</span><span class="p">([])</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">scale</span><span class="p">):</span>
        <span class="n">ax_</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'scale: {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">scale_</span><span class="p">),</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="nb">len</span><span class="p">(</span><span class="n">scale</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">ax_</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">'smooth: {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">smooth_</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/assets/images/hillshade_images/output_9_0.png" alt="png" /></p>

<h3 id="different-scale-and-normalization-parameters">Different <code class="language-plaintext highlighter-rouge">scale</code> and <code class="language-plaintext highlighter-rouge">normalization</code> parameters</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td><td class="rouge-code"><pre><span class="n">scale</span> <span class="o">=</span> <span class="p">(</span><span class="mf">0.1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
<span class="n">normalize</span> <span class="o">=</span> <span class="p">(</span><span class="bp">False</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="mf">0.6</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span>

<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">normalize</span><span class="p">),</span> <span class="nb">len</span><span class="p">(</span><span class="n">scale</span><span class="p">),</span> 
                       <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="nb">len</span><span class="p">(</span><span class="n">scale</span><span class="p">),</span> <span class="mi">2</span> <span class="o">*</span> <span class="nb">len</span><span class="p">(</span><span class="n">normalize</span><span class="p">)))</span>
<span class="n">fig</span><span class="p">.</span><span class="n">subplots_adjust</span><span class="p">(</span><span class="n">left</span><span class="o">=</span><span class="mf">0.1</span><span class="p">,</span> <span class="n">bottom</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">right</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">top</span><span class="o">=</span><span class="mf">0.9</span><span class="p">,</span>
                    <span class="n">wspace</span><span class="o">=</span><span class="mf">0.05</span><span class="p">,</span> <span class="n">hspace</span><span class="o">=</span><span class="mf">0.05</span><span class="p">)</span>

<span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="p">((</span><span class="n">normalize_</span><span class="p">,</span> <span class="n">scale_</span><span class="p">),</span> <span class="n">ax_</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">product</span><span class="p">(</span><span class="n">normalize</span><span class="p">,</span> <span class="n">scale</span><span class="p">),</span>
                                                 <span class="n">ax</span><span class="p">.</span><span class="n">flat</span><span class="p">)):</span>
    <span class="c1"># calculate illumination intensity with scale and normalize params
</span>    <span class="n">illumination</span> <span class="o">=</span> <span class="n">calc_intensity</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">scale</span><span class="o">=</span><span class="n">scale_</span><span class="p">,</span> <span class="n">normalize</span><span class="o">=</span><span class="n">normalize_</span><span class="p">)</span>
    <span class="n">ax_</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">illumination</span><span class="p">,</span>
               <span class="n">interpolation</span><span class="o">=</span><span class="s">'bilinear'</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'Greys_r'</span><span class="p">,</span>
               <span class="n">vmin</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">vmax</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">ax_</span><span class="p">.</span><span class="n">set_xticks</span><span class="p">([])</span>
    <span class="n">ax_</span><span class="p">.</span><span class="n">set_yticks</span><span class="p">([])</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">scale</span><span class="p">):</span>
        <span class="n">ax_</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'scale: {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">scale_</span><span class="p">),</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="nb">len</span><span class="p">(</span><span class="n">scale</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">ax_</span><span class="p">.</span><span class="n">set_ylabel</span><span class="p">(</span><span class="s">'normalize: {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">normalize_</span><span class="p">))</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><img src="/assets/images/hillshade_images/output_11_0.png" alt="png" /></p>

:ET